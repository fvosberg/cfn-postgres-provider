// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package internal

import (
	"context"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/ssm"
	"sync"
)

var (
	lockssmAgentMockGetParameterWithContext sync.RWMutex
)

// Ensure, that ssmAgentMock does implement ssmAgent.
// If this is not the case, regenerate this file with moq.
var _ ssmAgent = &ssmAgentMock{}

// ssmAgentMock is a mock implementation of ssmAgent.
//
//     func TestSomethingThatUsesssmAgent(t *testing.T) {
//
//         // make and configure a mocked ssmAgent
//         mockedssmAgent := &ssmAgentMock{
//             GetParameterWithContextFunc: func(in1 context.Context, in2 *ssm.GetParameterInput, in3 ...request.Option) (*ssm.GetParameterOutput, error) {
// 	               panic("mock out the GetParameterWithContext method")
//             },
//         }
//
//         // use mockedssmAgent in code that requires ssmAgent
//         // and then make assertions.
//
//     }
type ssmAgentMock struct {
	// GetParameterWithContextFunc mocks the GetParameterWithContext method.
	GetParameterWithContextFunc func(in1 context.Context, in2 *ssm.GetParameterInput, in3 ...request.Option) (*ssm.GetParameterOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetParameterWithContext holds details about calls to the GetParameterWithContext method.
		GetParameterWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *ssm.GetParameterInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
	}
}

// GetParameterWithContext calls GetParameterWithContextFunc.
func (mock *ssmAgentMock) GetParameterWithContext(in1 context.Context, in2 *ssm.GetParameterInput, in3 ...request.Option) (*ssm.GetParameterOutput, error) {
	if mock.GetParameterWithContextFunc == nil {
		panic("ssmAgentMock.GetParameterWithContextFunc: method is nil but ssmAgent.GetParameterWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *ssm.GetParameterInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockssmAgentMockGetParameterWithContext.Lock()
	mock.calls.GetParameterWithContext = append(mock.calls.GetParameterWithContext, callInfo)
	lockssmAgentMockGetParameterWithContext.Unlock()
	return mock.GetParameterWithContextFunc(in1, in2, in3...)
}

// GetParameterWithContextCalls gets all the calls that were made to GetParameterWithContext.
// Check the length with:
//     len(mockedssmAgent.GetParameterWithContextCalls())
func (mock *ssmAgentMock) GetParameterWithContextCalls() []struct {
	In1 context.Context
	In2 *ssm.GetParameterInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *ssm.GetParameterInput
		In3 []request.Option
	}
	lockssmAgentMockGetParameterWithContext.RLock()
	calls = mock.calls.GetParameterWithContext
	lockssmAgentMockGetParameterWithContext.RUnlock()
	return calls
}
